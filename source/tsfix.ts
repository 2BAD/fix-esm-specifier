import debug from 'debug'
import glob from 'fast-glob'
import { performance } from 'node:perf_hooks'
import { setupOptions } from './helpers/options.js'
import { getPackageDependencies } from './helpers/package.js'
import { processFile } from './processor.ts'
import type { Args } from './types.js'

const log = debug('tsfix:main')

/**
 * Fixes import statements in files generated by TypeScript compiler.
 *
 * @param args - The arguments passed to the function. It includes the pattern to search for files and options for the glob library.
 */
export const tsFix = async (args: Args): Promise<void> => {
  const dependencies = await getPackageDependencies()
  const { pattern, options } = setupOptions(args)

  log('Searching for files with extensions: %s', pattern)
  log('Using build directory: %s', options.cwd)

  let processedFiles = 0
  const startTime = performance.now()
  const stream = glob.stream(pattern, options)

  for await (const filePath of stream) {
    await processFile(filePath, dependencies)
    processedFiles++
  }

  const endTime = performance.now()
  const duration = (endTime - startTime).toFixed(2)
  console.log('Successfully fixed imports in %d files (%sms)', processedFiles, duration)
}
